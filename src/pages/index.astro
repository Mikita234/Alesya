---
import Layout from '../layouts/Layout.astro';

const title = "Алеся Такун — психолог в Минске | Гештальт-консультант";
const description = "Психолог в Минске. Очный приём и онлайн-консультации. Помощь при КПТСР, выгорании, сложных отношениях, травме привязанности. Запись: +375 29 307 83 42";
---

<Layout title={title} description={description}>
	<div class="hero">
		<div class="hero-content">
			<h1>Алеся Такун</h1>
            <p class="subtitle">Психолог, гештальт‑консультант</p>
            <p>В работе для меня важны присутствие, принятие и поддержка, которая помогает идти в сложные темы и выдерживать непростые чувства. Я опираюсь на гештальт‑подход, работу с телом и честный диалог — так появляется пространство, где можно быть собой и постепенно находить новые опоры. Работаю со взрослыми индивидуально, веду терапевтические группы.</p>

			<p>
                <a href={`${import.meta.env.BASE_URL}payments/`} class="btn">Записаться и оплатить</a>
			</p>
		</div>
        <div class="hero-photo">
            <img src={`${import.meta.env.BASE_URL}Photo/photo.jpg`} alt="Алеся Такун" width="300" height="400" loading="eager" decoding="async" fetchpriority="high" />
        </div>
	</div>
    
    <section id="services" class="section">
        <h2>Запросы, с которыми ко мне зачастую приходят</h2>
        <ul class="grid">
            <li>последствия КПТСР и травматического опыта</li>
            <li>эмоциональное выгорание</li>
            <li>эмоционально-зависимые отношения</li>
            <li>трудности с границами</li>
            <li>низкая самооценка и самокритика</li>
            <li>запутанные семейные сценарии и непрожитые эмоции</li>
            <li>жизненные кризисы и утраты</li>
        </ul>
        <p class="services-note">Если вашего запроса нет в списке — свяжитесь со мной, и мы обсудим, смогу ли я быть вам полезна.</p>
    </section>


    <section id="payments" class="section">
        <h2>Услуги и оплата</h2>
        
        <div class="payment-main">
            <h3>Свободный платёж</h3>
            <p>Введите сумму, которая вам подходит</p>
            
            <form class="free-payment" onsubmit="event.preventDefault()">
                <div class="amount-input">
                    <label>Сумма (BYN)</label>
                    <input type="number" min="1" step="1" required placeholder="Введите сумму" />
                </div>
                <button class="btn btn-large" type="submit">Оплатить</button>
            </form>
            
            <div class="quick-payments">
                <h4>Быстрые суммы</h4>
                <div class="quick-buttons">
                    <button class="btn-quick" data-amount="50">50 BYN</button>
                    <button class="btn-quick" data-amount="100">100 BYN</button>
                    <button class="btn-quick" data-amount="150">150 BYN</button>
                    <button class="btn-quick" data-amount="200">200 BYN</button>
                    <button class="btn-quick" data-amount="250">250 BYN</button>
                </div>
            </div>
        </div>
        
        <div class="service-types">
            <h4>Стоимость услуг</h4>
            <ul class="service-list">
                <li><strong>Индивидуальная консультация</strong> — 150 BYN</li>
                <li><strong>Онлайн-сессия</strong> — 150 BYN</li>
            </ul>
        </div>
    </section>

</Layout>

<style>
/* Hero Section */
.hero { 
    display: grid; 
    grid-template-columns: 1fr 320px; 
    gap: 48px; 
    align-items: center; 
    margin: 40px 0 80px; 
    padding: 40px 0;
}

.hero-content h1 { 
    margin: 0 0 16px 0; 
    font-size: 3rem; 
    font-weight: 800; 
    line-height: 1.1;
    background: linear-gradient(135deg, var(--text) 0%, var(--accent) 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
}

.subtitle { 
    font-size: 1.25rem; 
    font-weight: 600; 
    color: var(--accent); 
    margin-bottom: 24px; 
    line-height: 1.4;
}

.hero-content p { 
    font-size: 1.1rem; 
    color: var(--text-light); 
    margin-bottom: 32px; 
    line-height: 1.7;
}

.hero-photo { 
    position: relative;
}

.hero-photo img { 
    width: 100%; 
    height: auto; 
    border-radius: var(--radius); 
    object-fit: cover;
    box-shadow: var(--shadow-lg);
    transition: var(--transition);
}

.hero-photo img:hover {
    transform: translateY(-4px);
    box-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
}

/* Buttons */
.btn { 
    display: inline-flex;
    align-items: center;
    justify-content: center;
    background: linear-gradient(135deg, var(--accent) 0%, var(--accent-dark) 100%); 
    color: #fff; 
    text-decoration: none; 
    padding: 14px 28px; 
    border-radius: var(--radius); 
    font-weight: 600;
    font-size: 1rem;
    transition: var(--transition);
    box-shadow: var(--shadow);
    border: none;
    cursor: pointer;
}

.btn:hover { 
    transform: translateY(-2px);
    box-shadow: var(--shadow-lg);
    background: linear-gradient(135deg, var(--accent-dark) 0%, var(--accent) 100%);
}

/* Sections */
.section { 
    padding: 60px 0; 
    border-bottom: 1px solid var(--border);
}

.section:last-child { border-bottom: none; }

.section h2 { 
    font-size: 2.5rem; 
    font-weight: 700; 
    margin: 0 0 32px 0; 
    color: var(--text);
    text-align: center;
}

.section p { 
    font-size: 1.1rem; 
    color: var(--text-light); 
    line-height: 1.7;
    max-width: 800px;
    margin: 0 auto 24px auto;
    text-align: center;
}

/* Grid */
.grid { 
    display: grid; 
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr)); 
    gap: 24px; 
    padding: 0;
    list-style: none;
    margin: 0;
}

.grid li {
    background: var(--bg-alt);
    padding: 24px;
    border-radius: var(--radius);
    border: 1px solid var(--border);
    font-size: 1.1rem;
    color: var(--text-light);
    transition: var(--transition);
    position: relative;
    padding-left: 48px;
}

.grid li::before {
    content: "•";
    position: absolute;
    left: 16px;
    top: 24px;
    font-size: 1.2rem;
    color: var(--accent);
    font-weight: bold;
}

.grid li:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow);
    border-color: var(--accent-light);
}

.services-note {
    font-size: 1rem;
    color: var(--text-light);
    text-align: center;
    margin-top: 32px;
    font-style: italic;
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;
}

/* Payment Section */
.payment-main {
    background: linear-gradient(135deg, var(--accent) 0%, var(--accent-dark) 100%);
    color: white;
    padding: 40px 32px;
    border-radius: var(--radius);
    text-align: center;
    margin: 32px 0;
    box-shadow: var(--shadow-lg);
    position: relative;
    overflow: hidden;
}

.payment-main::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.1);
    z-index: 1;
}

.payment-main > * {
    position: relative;
    z-index: 2;
}

.payment-main h3 {
    font-size: 2rem;
    font-weight: 700;
    margin: 0 0 16px 0;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
}

.payment-main p {
    font-size: 1.1rem;
    margin: 0 0 24px 0;
    color: rgba(255, 255, 255, 0.95);
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
    font-weight: 500;
    text-align: center;
    line-height: 1.4;
    max-width: 100%;
    word-wrap: break-word;
    hyphens: auto;
}

.btn-large {
    font-size: 1.2rem;
    padding: 16px 32px;
    background: white;
    color: var(--accent);
    font-weight: 700;
}

.btn-large:hover {
    background: var(--bg-alt);
    transform: translateY(-2px);
}

.free-payment {
    margin: 24px 0;
}

.amount-input {
    margin-bottom: 20px;
}

.amount-input label {
    display: block;
    color: white;
    font-weight: 600;
    margin-bottom: 8px;
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
}

.amount-input input {
    width: 200px;
    padding: 12px 16px;
    border: 2px solid rgba(255, 255, 255, 0.3);
    border-radius: var(--radius);
    background: rgba(255, 255, 255, 0.1);
    color: white;
    font-size: 1.1rem;
    text-align: center;
    backdrop-filter: blur(10px);
    transition: var(--transition);
    margin: 0 auto;
    display: block;
}

.amount-input input:focus {
    outline: none;
    border-color: white;
    background: rgba(255, 255, 255, 0.2);
    box-shadow: 0 0 0 3px rgba(255, 255, 255, 0.1);
}

.amount-input input::placeholder {
    color: rgba(255, 255, 255, 0.7);
}

.quick-payments {
    margin-top: 32px;
    padding-top: 24px;
    border-top: 1px solid rgba(255, 255, 255, 0.2);
}

.quick-payments h4 {
    color: white;
    font-size: 1.1rem;
    font-weight: 600;
    margin: 0 0 16px 0;
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
}

.quick-buttons {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
    justify-content: center;
}

.btn-quick {
    padding: 8px 16px;
    background: rgba(255, 255, 255, 0.1);
    color: white;
    border: 1px solid rgba(255, 255, 255, 0.3);
    border-radius: var(--radius);
    cursor: pointer;
    font-size: 0.9rem;
    font-weight: 500;
    transition: var(--transition);
    backdrop-filter: blur(10px);
}

.btn-quick:hover {
    background: rgba(255, 255, 255, 0.2);
    border-color: rgba(255, 255, 255, 0.5);
    transform: translateY(-1px);
}

.btn-quick.active {
    background: rgba(255, 255, 255, 0.3);
    border-color: white;
    color: white;
    font-weight: 600;
}

.service-types {
    background: var(--bg-alt);
    padding: 32px;
    border-radius: var(--radius);
    border: 1px solid var(--border);
}

.service-types h4 {
    font-size: 1.25rem;
    font-weight: 600;
    margin: 0 0 20px 0;
    color: var(--text);
    text-align: center;
}

.service-list {
    list-style: none;
    padding: 0;
    margin: 0;
    display: grid;
    gap: 12px;
}

.service-list li {
    padding: 16px 20px;
    background: var(--bg);
    border-radius: var(--radius-sm);
    border: 1px solid var(--border);
    font-size: 1.1rem;
    color: var(--text-light);
    transition: var(--transition);
}

.service-list li:hover {
    border-color: var(--accent-light);
    transform: translateY(-1px);
}

.service-list strong {
    color: var(--text);
    font-weight: 600;
}

/* Contacts */
.contacts-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 24px;
    margin: 32px 0;
}

.contact-item {
    background: var(--bg-alt);
    padding: 24px;
    border-radius: var(--radius);
    border: 1px solid var(--border);
    text-align: center;
    transition: var(--transition);
}

.contact-item:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow);
    border-color: var(--accent-light);
}

.contact-item strong {
    color: var(--text);
    font-weight: 600;
    font-size: 1.1rem;
    display: block;
    margin-bottom: 8px;
}

.contact-item a {
    color: var(--accent);
    text-decoration: none;
    font-weight: 500;
    font-size: 1.1rem;
}

.contact-item a:hover {
    text-decoration: underline;
}

.muted { 
    color: var(--muted); 
    font-size: 0.95rem;
    text-align: center;
    margin-top: 16px;
}

/* Responsive */
@media (max-width: 768px) {
    .hero { 
        grid-template-columns: 1fr; 
        gap: 24px; 
        margin: 16px 0 40px;
        padding: 16px 0;
    }
    
    .hero-content h1 { 
        font-size: 2.2rem; 
        text-align: center;
        line-height: 1.2;
    }
    
    .hero-photo { 
        order: -1; 
        max-width: 240px;
        margin: 0 auto;
    }
    
    .section { 
        padding: 32px 0; 
    }
    
    .section h2 { 
        font-size: 1.8rem; 
        margin-bottom: 24px;
    }
    
    .grid { 
        grid-template-columns: 1fr; 
        gap: 12px; 
    }
    
    .grid li {
        padding: 16px 20px;
        padding-left: 40px;
    }
    
    .grid li::before {
        left: 12px;
        top: 16px;
    }
    
    .payment-main {
        padding: 24px 20px;
        margin: 24px 0;
    }
    
    .payment-main h3 {
        font-size: 1.6rem;
    }
    
    .payment-main p {
        font-size: 1rem;
        line-height: 1.3;
        padding: 0 10px;
    }
    
    .btn-large {
        font-size: 1.1rem;
        padding: 14px 24px;
    }
    
    .service-types {
        padding: 20px;
    }
    
    .service-list li {
        padding: 12px 16px;
        font-size: 1rem;
    }
    
    .contacts-grid {
        grid-template-columns: 1fr;
        gap: 16px;
        margin: 24px 0;
    }
    
    .contact-item {
        padding: 20px;
    }
    
    .contact-item strong {
        font-size: 1rem;
    }
    
    .contact-item a {
        font-size: 1rem;
    }
    
    .quick-buttons {
        gap: 6px;
    }
    
    .btn-quick {
        padding: 6px 12px;
        font-size: 0.85rem;
    }
    
    .amount-input input {
        width: 150px;
        padding: 10px 12px;
        font-size: 1rem;
    }
}

@media (max-width: 480px) {
    .hero-content h1 { 
        font-size: 2rem; 
    }
    
    .subtitle { 
        font-size: 1.1rem; 
    }
    
    .btn { 
        padding: 12px 24px; 
        font-size: 0.95rem;
    }
    
    .payment-main p {
        font-size: 0.95rem;
        padding: 0 5px;
        line-height: 1.2;
    }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const quickButtons = document.querySelectorAll('.btn-quick');
    const amountInput = document.querySelector('.amount-input input');
    const form = document.querySelector('.free-payment');
    
    if (quickButtons.length > 0 && amountInput) {
        quickButtons.forEach(button => {
            button.addEventListener('click', function() {
                const amount = this.getAttribute('data-amount');
                amountInput.value = amount;
                
                // Подсветка активной кнопки
                quickButtons.forEach(btn => btn.classList.remove('active'));
                this.classList.add('active');
            });
        });
    }

    // Шаблон редиректа на hosted checkout Альфа-Банк (плейсхолдеры)
    if (form && amountInput) {
        form.addEventListener('submit', function() {
            const amount = parseInt(amountInput.value, 10);
            if (!amount || amount < 1) return;
            // TODO: заменить URL и параметры на боевые после подключения мерчанта
            const successUrl = `${location.origin}${import.meta.env.BASE_URL}?status=success`;
            const cancelUrl = `${location.origin}${import.meta.env.BASE_URL}?status=cancel`;
            const returnUrl = successUrl;
            // Пример для hosted checkout: /pay?amount=... (здесь просто заглушка)
            const providerUrl = `${import.meta.env.BASE_URL}payments/?amount=${amount}&success_url=${encodeURIComponent(successUrl)}&cancel_url=${encodeURIComponent(cancelUrl)}&return_url=${encodeURIComponent(returnUrl)}`;
            window.location.href = providerUrl;
        });
    }
});
</script>
